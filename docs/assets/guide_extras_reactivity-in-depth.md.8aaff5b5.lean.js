import{M as s,_ as n,r as a,o as l,c as p,u as o,t as e,d as c,F as t,n as r,j as y,A as F,B as D,e as A,a as C}from"./app.be9c8b40.js";const i=s(Array.from(Array(3).keys()).map((s=>Array.from(Array(3).keys()).map((s=>"")))));function d(s){if(!s.startsWith("="))return s;s=s.slice(1).replace(/\b([A-Z])(\d{1,2})\b/g,((s,n,a)=>`get(${n.charCodeAt(0)-65},${a})`));try{return new Function("get",`return ${s}`)(u)}catch(n){return`#ERROR ${n}`}}function u(s,n){const a=d(i[s][n]),l=Number(a);return Number.isFinite(l)?l:a}i[0][0]="1",i[0][1]="2",i[0][2]="= A0 + A1";const g=["title"],b=["value"],h={key:1};var v=n({props:{c:Number,r:Number},setup(s){const n=s,c=a(!1);function t(s){c.value=!1,i[n.c][n.r]=s.target.value.trim()}return(n,a)=>(l(),p("div",{class:"cell",title:o(i)[s.c][s.r],onClick:a[1]||(a[1]=s=>c.value=!0)},[c.value?(l(),p("input",{key:0,value:o(i)[s.c][s.r],onChange:t,onBlur:t,onVnodeMounted:a[0]||(a[0]=({el:s})=>s.focus())},null,40,b)):(l(),p("span",h,e(o(d)(o(i)[s.c][s.r])),1))],8,g))}},[["__scopeId","data-v-f36dc108"]]);const f=(s=>(F("data-v-bc75b9c0"),s=s(),D(),s))((()=>c("th",null,null,-1)));var m=n({setup(s){const n=i.map(((s,n)=>String.fromCharCode(65+n)));return(s,a)=>(l(),p("table",null,[c("thead",null,[c("tr",null,[f,(l(!0),p(t,null,r(o(n),(s=>(l(),p("th",null,e(s),1)))),256))])]),c("tbody",null,[(l(!0),p(t,null,r(o(i)[0].length,(s=>(l(),p("tr",null,[c("th",null,e(s-1),1),(l(!0),p(t,null,r(o(n),((n,a)=>(l(),p("td",null,[y(v,{r:s-1,c:a},null,8,["r","c"])])))),256))])))),256))])]))}},[["__scopeId","data-v-bc75b9c0"]]);const I=c("h1",{id:"reactivity-in-depth",tabindex:"-1"},[A("深入响应式系统 "),c("a",{class:"header-anchor",href:"#reactivity-in-depth","aria-hidden":"true"},"#")],-1),Z=c("p",null,"Vue 最有区别性的功能就是其潜藏于底层的响应式系统。组件状态都是响应式的 JavaScript 对象。当更改它们时，视图会随即更新。这让状态管理更加简单直观，但理解它是如何工作的也是很重要的，以避免一些常见的陷阱。在本节中，我们将深入研究 Vue 响应性系统的一些底层细节。",-1),V=c("h2",{id:"what-is-reactivity",tabindex:"-1"},[A("什么是响应性 "),c("a",{class:"header-anchor",href:"#what-is-reactivity","aria-hidden":"true"},"#")],-1),G=c("p",null,"这个术语最近在编程中经常出现，但人们说它的时候究竟是想表达什么意思呢？响应性是一种可以使我们声明式地处理变化的编程范式。一个常见的典型例子是 Excel 电子表格，它是一个很好的例子。",-1),E=C("",79),x='{"title":"深入响应式系统","description":"","frontmatter":{"outline":"deep"},"headers":[{"level":2,"title":"什么是响应性","slug":"what-is-reactivity"},{"level":2,"title":"Vue 中的响应性是如何工作的","slug":"how-reactivity-works-in-vue"},{"level":2,"title":"运行时 vs. 编译时响应性","slug":"runtime-vs-compile-time-reactivity"},{"level":2,"title":"响应性调试","slug":"reactivity-debugging"},{"level":3,"title":"组件调试钩子","slug":"component-debugging-hooks"},{"level":3,"title":"计算属性调试","slug":"computed-debugging"},{"level":3,"title":"侦听器调试","slug":"watcher-debugging"},{"level":2,"title":"与其他状态系统集成","slug":"integration-with-external-state-systems"},{"level":3,"title":"不可变数据","slug":"immutable-data"},{"level":3,"title":"状态机","slug":"state-machines"},{"level":3,"title":"RxJS","slug":"rxjs"}],"relativePath":"guide/extras/reactivity-in-depth.md"}',B={},w=Object.assign(B,{setup:s=>(s,n)=>(l(),p("div",null,[I,Z,V,G,y(m),E]))});export{x as __pageData,w as default};
