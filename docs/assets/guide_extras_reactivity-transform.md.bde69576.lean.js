import{_ as s,c as n,o as a,a as l}from"./app.be9c8b40.js";const p='{"title":"响应性语法糖","description":"","frontmatter":{},"headers":[{"level":2,"title":"ref vs. 响应式变量","slug":"refs-vs-reactive-variables"},{"level":2,"title":"通过 $() 解构","slug":"destructuring-with"},{"level":2,"title":"用 $() 将现存的 ref 转换为响应式对象","slug":"convert-existing-refs-to-reactive-variables-with"},{"level":2,"title":"响应式 props 解构","slug":"reactive-props-destructure"},{"level":2,"title":"保持在函数间的响应性","slug":"retaining-reactivity-across-function-boundaries"},{"level":3,"title":"以参数形式传入函数","slug":"passing-into-function-as-argument"},{"level":3,"title":"作为函数返回值","slug":"returning-inside-function-scope"},{"level":3,"title":"在已解构的 prop 上使用 $$()","slug":"usage-on-destructured-props"},{"level":2,"title":"TypeScript 集成","slug":"typescript-integration"},{"level":2,"title":"显式启用","slug":"explicit-opt-in"},{"level":3,"title":"Vite","slug":"vite"},{"level":3,"title":"vue-cli","slug":"vue-cli"},{"level":3,"title":"仅用 webpack + vue-loader","slug":"plain-webpack-vue-loader"}],"relativePath":"guide/extras/reactivity-transform.md"}',o={},e=[l("",73)];var c=s(o,[["render",function(s,l,p,o,c,t){return a(),n("div",null,e)}]]);export{p as __pageData,c as default};
